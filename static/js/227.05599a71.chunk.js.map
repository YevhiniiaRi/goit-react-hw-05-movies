{"version":3,"file":"static/js/227.05599a71.chunk.js","mappings":"+MA2EA,UAxEc,WACZ,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAUF,EAAaG,IAAI,UAAY,GAC7C,EAA4BC,EAAAA,SAAe,IAA3C,eAAOC,EAAP,KAAeC,EAAf,KACA,EAAkDF,EAAAA,UAAe,GAAjE,eAAOG,EAAP,KAA0BC,EAA1B,KAEMC,EAAY,mCAAG,WAAMC,GAAN,kGAEMC,MAAM,4FAAD,OACkED,IAH7E,cAEXE,EAFW,gBAKEA,EAASC,OALX,OAKXC,EALW,OAMjBR,EAAUQ,EAAKC,SACfP,GAAqB,GAPJ,kDASjBQ,QAAQC,MAAM,0BAAd,MATiB,0DAAH,sDAsClB,OACE,4BACE,0BACE,SAAC,KAAD,CAAMC,GAAG,KAAKC,UAAU,eAAxB,wBAKF,kBACEA,UAAU,QACVC,KAAK,OACLC,MAAOnB,EACPoB,SA5BoB,SAAAC,GACxB,IAAMb,EAAaa,EAAEC,OAAOH,MAEF,KAAtBX,EAAWe,QACbxB,GAAgB,SAAAyB,GACd,IAAMC,EAAY,IAAIC,gBAAgBF,GAEtC,OADAC,EAAUE,OAAO,SACVF,CACR,IACDnB,GAAqB,GACrBF,EAAU,KAEVL,EAAgB,CAAE6B,MAAOpB,GAE5B,KAgBG,mBAAQqB,QAvCS,WACI,KAAnB7B,EAAQuB,QACVjB,GAAqB,GACrBF,EAAU,KAEVG,EAAaP,EAEhB,EAgCG,oBACCK,IACC,wBACGF,EAAO2B,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMf,GAAE,kBAAae,EAAMC,IAA3B,SAAkCD,EAAME,SADjCF,EAAMC,GADA,QAS1B,C,sBCzED,SAASE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBtB,EAAQuB,EAAKvB,KAInB,CAHE,MAAOJ,GAEP,YADAsB,EAAOtB,EAET,CAEI2B,EAAKC,KACPP,EAAQjB,GAERyB,QAAQR,QAAQjB,GAAO0B,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMnB,GACbe,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQpB,EAClE,CAEA,SAASoB,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["pages/Movie.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\n\nconst Movie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const keyword = searchParams.get('query') || '';\n  const [movies, setMovies] = React.useState([]);\n  const [isSearchPerformed, setIsSearchPerformed] = React.useState(false);\n\n  const searchMovies = async inputValue => {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=8e0989dbac705c526907a37342af002c&query=${inputValue}`\n      );\n      const data = await response.json();\n      setMovies(data.results);\n      setIsSearchPerformed(true);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  const handleSearch = () => {\n    if (keyword.trim() === '') {\n      setIsSearchPerformed(false);\n      setMovies([]);\n    } else {\n      searchMovies(keyword);\n    }\n  };\n\n  const handleInputChange = e => {\n    const inputValue = e.target.value;\n\n    if (inputValue.trim() === '') {\n      setSearchParams(prevParams => {\n        const newParams = new URLSearchParams(prevParams);\n        newParams.delete('query');\n        return newParams;\n      });\n      setIsSearchPerformed(false);\n      setMovies([]);\n    } else {\n      setSearchParams({ query: inputValue });\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <Link to=\"..\" className=\"go-back-link\">\n          Go back\n        </Link>\n      </div>\n\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={keyword}\n        onChange={handleInputChange}\n      />\n      <button onClick={handleSearch}>Search</button>\n      {isSearchPerformed && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movie;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useSearchParams","searchParams","setSearchParams","keyword","get","React","movies","setMovies","isSearchPerformed","setIsSearchPerformed","searchMovies","inputValue","fetch","response","json","data","results","console","error","to","className","type","value","onChange","e","target","trim","prevParams","newParams","URLSearchParams","delete","query","onClick","map","movie","id","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}