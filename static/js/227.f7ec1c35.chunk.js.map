{"version":3,"file":"static/js/227.f7ec1c35.chunk.js","mappings":"wNA6FA,UA1Fc,WAAO,IAAD,IAClB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAUF,EAAaG,IAAI,UAAY,GAC7C,EAA4BC,EAAAA,SAAe,IAA3C,eAAOC,EAAP,KAAeC,EAAf,KACA,EAAkDF,EAAAA,UAAe,GAAjE,eAAOG,EAAP,KAA0BC,EAA1B,KACA,EAA0CJ,EAAAA,UAAe,GAAzD,eAAOK,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAErDC,EAAY,mCAAG,WAAMC,GAAN,kGAEMC,MAAM,4FAAD,OACkED,IAH7E,cAEXE,EAFW,gBAKEA,EAASC,OALX,OAKXC,EALW,OAMjBhB,EAAUgB,EAAKC,SACfC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUL,EAAKC,UAPlC,kDASjBK,QAAQC,MAAM,0BAAd,MATiB,0DAAH,uDAalBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAeP,aAAaQ,QAAQ,UACtCD,IACFzB,EAAUoB,KAAKO,MAAMF,IACrBvB,GAAqB,GAExB,GAAE,KAEHsB,EAAAA,EAAAA,YAAU,WACJrB,GAAoC,KAAnBP,EAAQgC,SAC3BjB,EAAaf,GACbM,GAAqB,GAExB,GAAE,CAACC,EAAeP,IA2BnB,OACE,4BACE,0BACE,SAAC,KAAD,CAAMiC,GAAItB,EAAoBuB,QAASC,UAAU,eAAjD,wBAKF,kBACEA,UAAU,QACVC,KAAK,OACLC,MAAOrC,EACPsC,SA5BoB,SAAAC,GACxB,IAAMvB,EAAauB,EAAEC,OAAOH,MAEF,KAAtBrB,EAAWgB,QACbjC,GAAgB,SAAA0C,GACd,IAAMC,EAAY,IAAIC,gBAAgBF,GAEtC,OADAC,EAAUE,OAAO,SACVF,CACR,IACDpC,GAAqB,GACrBF,EAAU,KAEVL,EAAgB,CAAE8C,MAAO7B,GAE5B,KAgBG,mBAAQ8B,QAvCS,WACI,KAAnB9C,EAAQgC,QACV1B,GAAqB,GACrBF,EAAU,KAEVI,GAAiB,EAEpB,EAgCG,oBACCH,IACC,wBACGF,EAAO4C,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMf,GAAE,kBAAae,EAAMC,IAA3B,SAAkCD,EAAME,SADjCF,EAAMC,GADA,QAS1B,C,sBC3FD,SAASE,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBrB,EAAQsB,EAAKtB,KAInB,CAHE,MAAOV,GAEP,YADA2B,EAAO3B,EAET,CAEIgC,EAAKC,KACPP,EAAQhB,GAERwB,QAAQR,QAAQhB,GAAOyB,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMlB,GACbc,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQnB,EAClE,CAEA,SAASmB,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["pages/Movie.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const keyword = searchParams.get('query') || '';\n  const [movies, setMovies] = React.useState([]);\n  const [isSearchPerformed, setIsSearchPerformed] = React.useState(false);\n  const [searchTrigger, setSearchTrigger] = React.useState(false); // Додали стан searchTrigger\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const searchMovies = async inputValue => {\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=8e0989dbac705c526907a37342af002c&query=${inputValue}`\n      );\n      const data = await response.json();\n      setMovies(data.results);\n      localStorage.setItem('movies', JSON.stringify(data.results)); // Зберігаємо колекцію фільмів у localStorage\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  useEffect(() => {\n    const storedMovies = localStorage.getItem('movies');\n    if (storedMovies) {\n      setMovies(JSON.parse(storedMovies)); // Відновлюємо колекцію фільмів з localStorage\n      setIsSearchPerformed(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (searchTrigger && keyword.trim() !== '') {\n      searchMovies(keyword);\n      setIsSearchPerformed(true);\n    }\n  }, [searchTrigger, keyword]);\n\n  const handleSearch = () => {\n    if (keyword.trim() === '') {\n      setIsSearchPerformed(false);\n      setMovies([]);\n    } else {\n      setSearchTrigger(true);\n    }\n  };\n\n  const handleInputChange = e => {\n    const inputValue = e.target.value;\n\n    if (inputValue.trim() === '') {\n      setSearchParams(prevParams => {\n        const newParams = new URLSearchParams(prevParams);\n        newParams.delete('query');\n        return newParams;\n      });\n      setIsSearchPerformed(false);\n      setMovies([]);\n    } else {\n      setSearchParams({ query: inputValue });\n    }\n  };\n\n  return (\n    <div>\n      <div>\n        <Link to={backLinkLocationRef.current} className=\"go-back-link\">\n          Go back\n        </Link>\n      </div>\n\n      <input\n        className=\"input\"\n        type=\"text\"\n        value={keyword}\n        onChange={handleInputChange}\n      />\n      <button onClick={handleSearch}>Search</button>\n      {isSearchPerformed && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movie;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useSearchParams","searchParams","setSearchParams","keyword","get","React","movies","setMovies","isSearchPerformed","setIsSearchPerformed","searchTrigger","setSearchTrigger","location","useLocation","backLinkLocationRef","useRef","state","from","searchMovies","inputValue","fetch","response","json","data","results","localStorage","setItem","JSON","stringify","console","error","useEffect","storedMovies","getItem","parse","trim","to","current","className","type","value","onChange","e","target","prevParams","newParams","URLSearchParams","delete","query","onClick","map","movie","id","title","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}