{"version":3,"file":"static/js/681.ad2a4811.chunk.js","mappings":"yNA+CA,UA1CgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6GAEMC,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,sDAFN,OAEXQ,EAFW,OAKjBJ,EAAWI,EAASC,KAAKC,SALR,gDAOjBC,QAAQC,IAAR,MAPiB,yDAAH,qDAWlBN,GACD,GAAE,CAACN,IAEmB,IAAnBG,EAAQU,QACH,oDAIP,4BACE,qCACA,wBACGV,EAAQW,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAS1B,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8e0989dbac705c526907a37342af002c`\n        );\n        setReviews(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <div>No reviews available.</div>;\n  }\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","axios","response","data","results","console","log","length","map","review","author","content","id"],"sourceRoot":""}